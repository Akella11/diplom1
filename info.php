<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Інформаційна сторінка</title>
    <style>
        body {
            font-family: sans-serif;
            margin: 20px;
            background-color: #f4f4f4;
            line-height: 1.6;
        }

        .container {
            background-color: #fff;
            padding: 30px; 
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            max-width: 800px; 
            margin: 0 auto;
            text-align: justify; 
        }

        h2 {
            text-align: center;
            color: #333;
            margin-bottom: 25px;
        }

        h3 {
            color: #333;
            margin-top: 25px;
            margin-bottom: 10px;
        }

        p {
            margin-bottom: 15px;
        }

        ul {
            margin-bottom: 15px;
            padding-left: 20px;
        }

        li {
            margin-bottom: 8px;
        }

        .links {
            margin-top: 30px; 
            text-align: center;
        }

        .links a {
            color: #007bff;
            text-decoration: none;
            font-size: 1.1em; 
        }

        .links a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>SQL-ін'єкції: Короткий огляд</h2>

        <p>
            SQL-ін'єкція — це один з найпоширеніших і найнебезпечніших типів атак на веб-додатки. 
            Вона полягає у впровадженні шкідливого SQL-коду через поля вводу користувача у запити до бази даних. 
            Якщо додаток недостатньо захищений, цей шкідливий код може бути виконаний, 
            дозволяючи зловмиснику маніпулювати базою даних.
        </p>

        <h3>Як це працює?</h3>
        <p>
            Веб-додатки часто використовують дані, введені користувачем (наприклад, ім'я користувача, пароль, пошукові запити), для формування SQL-запитів до бази даних. Якщо ці дані не перевіряються або не "очищаються" належним чином перед включенням у запит, зловмисник може вставити спеціальні символи або команди, які змінять логіку оригінального SQL-запиту.
        </p>
        <p>
            Це може призвести до таких наслідків, як:
        </p>
        <ul>
            <li>Викрадення конфіденційних даних (імен користувачів, паролів, особистої інформації).</li>
            <li>Зміна або видалення даних у базі даних.</li>
            <li>Отримання адміністративного доступу до системи.</li>
            <li>Виконання команд операційної системи.</li>
        </ul>

        <h3>Типи SQL-ін'єкцій</h3>
        <p>Існує кілька основних типів SQL-ін'єкцій, кожен з яких використовує різні методи для досягнення цілей:</p>
        <ul>
            <li>
                Error-based SQLi (ін'єкція на основі помилок): Зловмисник отримує інформацію 
                про базу даних через повідомлення про помилки, які генеруються сервером бази даних 
                у відповідь на шкідливий запит. Це дозволяє крок за кроком витягувати дані або структуру бази.
            </li>
            <li>
                Union-based SQLi (ін'єкція на основі UNION): Зловмисник використовує оператор `UNION` 
                для об'єднання результатів шкідливого запиту з результатами легітимного запиту. 
                Це дозволяє виводити дані з інших таблиць або навіть баз даних, які не передбачені оригінальним запитом.
            </li>
            <li>
                Boolean-based Blind SQLi (сліпа SQL-ін'єкція на основі логічних операцій): 
                У цьому випадку зловмисник не отримує дані безпосередньо у відповідь на запит, 
                але може вивести інформацію, спостерігаючи за логічною відповіддю веб-додатку 
                (наприклад, чи змінюється вміст сторінки або повертається TRUE/FALSE). 
                Зловмисник відправляє запити, які перевіряють умови, і на основі цього вибудовує інформацію про дані.
            </li>
            <li>
                Time-based Blind SQLi (сліпа SQL-ін'єкція на основі часу): Подібна до Boolean-based, 
                але інформація виводиться шляхом спостереження за затримками у відповіді сервера. 
                Зловмисник змушує базу даних чекати певну кількість часу в залежності від результату запиту. 
                Якщо запит істинний, сервер затримується з відповіддю; якщо ні — відповідає швидко.
            </li>
        </ul>

        <h3>Захист від SQL-ін'єкцій</h3>
        <p>
            Основним способом захисту є використання параметризованих запитів з прив'язкою параметрів. 
            Це гарантує, що введені користувачем дані інтерпретуються як значення, а не як частини SQL-коду. 
            Інші важливі заходи: фільтрація вводу, використання мінімальних привілеїв для користувачів баз даних, 
            регулярні оновлення програмного забезпечення.
        </p>

        <div class="links">
            <a href="index.php">На головну сторінку</a>
        </div>
    </div>
</body>
</html>
